{"version":3,"sources":["types/HeaderButtonIcon.ts","components/Nav/Nav.tsx","store/hooks.ts","store/menuReducer.ts","components/Logo/Logo.tsx","components/HeaderButton/HeaderButton.tsx","components/Search/Search.tsx","components/Menu/Menu.tsx","components/Header/Header.tsx","components/FooterButton/FooterButton.tsx","components/FooterLogo/FooterLogo.tsx","components/FooterNav/FooterNav.tsx","components/Footer/Footer.tsx","App.tsx","components/Photos/Photos.tsx","functions/getProducts.ts","functions/setDisabledButton.ts","store/cartReducer.ts","store/favouritesReducer.ts","components/ProductCard/ProductCard.tsx","components/SliderContent/SliderContent.tsx","components/ProductsSlider/ProductsSlider.tsx","functions/getHotPriceProducts.ts","components/Catagories/Categories.tsx","components/NewBrands/NewBrands.tsx","functions/getBrandNewProducts.ts","pages/HomePage/HomePage.tsx","components/Selector/Selector.tsx","components/Pagination/Pagination.tsx","components/List/List.tsx","components/Loader/Loader.tsx","components/NoResults/NoResults.tsx","components/Breadcrumbs/Breadcrumbs.tsx","functions/capitalizedLetter.ts","components/NoSearchResults/NoSearchResults.tsx","components/Content/Content.tsx","functions/getProductsOfCategory.ts","functions/filterProducts.ts","pages/PhonesPage/PhonesPage.tsx","pages/TabletsPage/TabletsPage.tsx","pages/AccessoriesPage/AccessoriesPage.tsx","functions/getSuggestedProducts.ts","components/Like/Like.tsx","components/BackButton/BackButton.tsx","services/colors.ts","services/specs.ts","pages/ProductDetailsPage/ProductDetailsPage.tsx","functions/getProductInfo.ts","pages/CartPage/CartPage.tsx","pages/FavouritesPage/FavouritesPage.tsx","pages/NotFoundPage/NotFoundPage.tsx","store/store.ts","Root.tsx","index.tsx"],"names":["HeaderButtonIcon","returnClass","isActive","cn","Nav","className","to","useAppSelector","useSelector","useAppDispatch","useDispatch","menuSlice","createSlice","name","initialState","reducers","open","close","actions","Logo","dispatch","onClick","menuActions","src","alt","returnClassName","classNames","HeaderButton","type","useState","totalQuantity","setTotalQuantity","cart","state","favourites","useEffect","count","Favourites","length","reduce","total","quantity","Search","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","isSearch","pathname","placeholder","slice","onChange","event","params","URLSearchParams","set","target","value","delete","aria-label","Menu","isMenuActive","menu","handleState","Header","isMenuOpen","document","body","classList","add","remove","isCartPage","Cart","FooterButton","window","scrollTo","top","FooterLogo","FooterNav","href","rel","Footer","App","dotsId","photos","map","url","Photos","currentPhotoIndex","setCurrentPhotoIndex","isDisabled","setIsDisabled","timeout","setTimeout","clearTimeout","onRightClick","currentIndex","interval","setInterval","clearInterval","disabled","photo","photoIndex","newPosition","props","id","dotId","request","fetch","then","response","ok","Error","json","getProducts","setDisabledButton","setIsLeftButtonDisabled","setIsRightButtonDisabled","products","elementWidth","translate","cartSlice","action","push","payload","localStorage","setItem","JSON","stringify","take","newCart","filter","product","updateQuantity","parse","getItem","favouritesSlice","newFavourites","ProductCard","image","price","fullPrice","screen","capacity","ram","phoneId","cartActions","favouritesActions","data-cy","Math","round","some","productFromCart","favourite","SliderContent","title","onLeftClick","isLeftButtonDisabled","isRightButtonDisabled","reference","ref","style","transform","gap","ProductsSlider","setProducts","setTranslate","useRef","blockWidth","current","clientWidth","useMemo","sort","product1","product2","catch","currentTranslate","Categories","tabletsCount","setTabletsCount","accessoriesCount","setAccessoriesCount","phonesCount","setPhonesCount","category","NewBrands","year","HomePage","Selector","options","label","setOption","valueKey","handleOnClick","areOptionsOpen","setAreOptionsOpen","option","Pagination","currentPage","pagesCount","toString","pages","i","page","returnButtons","sortLabels","pageValues","sortValues","labels","valuesKeys","List","sortedBy","setSortedBy","perPage","setPerPage","setPagesCount","setCurrentPage","visibleProducts","setVisibleProducts","newPagesCount","ceil","sorted","localeCompare","filtered","param","indexOf","listPage","Loader","NoResults","Breadcrumbs","split","pageName","string","toUpperCase","NoSearchResults","Content","isLoading","isNoSearchResults","getProductsOfCategory","setIsLoading","finally","filterProducts","appliedQuery","setIsNoSearchResults","filteredProducts","trim","toLowerCase","includes","PhonesPage","phones","setPhones","visiblePhones","setVisiblePhones","setAppliedQuery","timerId","join","TabletsPage","tablets","setTablets","visibleTablets","setVisibleTablets","AccessoriesPage","accessories","setAccessories","visibleAccessories","setVisibleAccessories","returnRandomList","resultRandomList","max","getRandomProduct","floor","random","randomProduct","Like","BackButton","history","back","colors","black","rosegold","gold","silver","spacegray","green","yellow","white","purple","red","midnightgreen","coral","info","specsNames","ProductDetailsPage","productInfo","setProductInfo","currentImage","setCurrentImage","currentCapacity","setCurrentCapacity","currentColor","setCurrentColor","setProduct","isError","setIsError","productId","useParams","find","desiredPhone","specs","at","getProductInfo","currentPhone","images","handleCurrentImage","link","colorsAvailable","color","backgroundColor","capacityAvailable","priceDiscount","priceRegular","productInCart","favouriteProduct","specName","description","text","CartPage","totalPrice","setTotalPrice","isMessage","setIsMessage","getMessage","useCallback","changeQuantity","operator","newQuantity","newProductQuantityInfo","takeProductFromCart","FavouritesPage","visibleFavourites","setVisibleFavourites","NotFoundPage","store","configureStore","reducer","favouritesReducer","cartReducer","menuReducer","Root","path","element","index","replace","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d8abc58f.chunk.js","sourcesContent":["export enum HeaderButtonIcon {\n  Cart = 'cart',\n  Favourites = 'favourites',\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst returnClass = ({ isActive }: { isActive: boolean }) => cn(\n  'nav__link',\n  { 'nav__link--active': isActive },\n);\n\nexport const Nav = () => (\n  <nav className=\"nav\">\n    <ul className=\"nav__list\">\n      <li className=\"nav__item\">\n        <NavLink to=\"/\" className={returnClass}>\n          home\n        </NavLink>\n      </li>\n\n      <li className=\"nav__item\">\n        <NavLink to=\"/phones\" className={returnClass}>\n          phones\n        </NavLink>\n      </li>\n\n      <li className=\"nav__item\">\n        <NavLink to=\"/tablets\" className={returnClass}>\n          tablets\n        </NavLink>\n      </li>\n\n      <li className=\"nav__item\">\n        <NavLink to=\"/accessories\" className={returnClass}>\n          accessories\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n","import { TypedUseSelectorHook, useSelector, useDispatch } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport const useAppDispatch: () => AppDispatch = useDispatch;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = false;\n\nconst menuSlice = createSlice({\n  name: 'menu',\n  initialState,\n  reducers: {\n    open: () => true,\n    close: () => false,\n  },\n});\n\nexport const { actions } = menuSlice;\nexport default menuSlice.reducer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useAppDispatch } from '../../store/hooks';\nimport { actions as menuActions } from '../../store/menuReducer';\n\nexport const Logo = () => {\n  const dispatch = useAppDispatch();\n\n  const onClick = () => dispatch(menuActions.close());\n\n  return (\n    <Link\n      to=\"/\"\n      className=\"logo header__logo\"\n      onClick={onClick}\n    >\n      <img\n        src=\"./img/logo/logo.svg\"\n        alt=\"Logo\"\n        className=\"logo__image\"\n      />\n    </Link>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { HeaderButtonIcon } from '../../types/HeaderButtonIcon';\n\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { actions as menuActions } from '../../store/menuReducer';\n\nconst returnClassName = ({ isActive }: { isActive: boolean }) => (\n  classNames(\n    'header-button header__button',\n    { 'haeder-button header__button header-button--active': isActive },\n  )\n);\n\ntype Props = {\n  type: HeaderButtonIcon;\n};\n\nexport const HeaderButton: React.FC<Props> = ({ type }) => {\n  const [totalQuantity, setTotalQuantity] = useState(0);\n\n  const dispatch = useAppDispatch();\n\n  const cart = useAppSelector(state => state.cart);\n  const favourites = useAppSelector(state => state.favourites);\n\n  const onClick = () => dispatch(menuActions.close());\n\n  useEffect(() => {\n    const count = (type === HeaderButtonIcon.Favourites)\n      ? favourites.length\n      : cart.reduce(((\n        total: number,\n        { quantity }: { quantity: number },\n      ) => total + quantity), 0);\n\n    setTotalQuantity(count);\n  }, [cart, favourites]);\n\n  return (\n    <NavLink\n      to={`/${type}`}\n      className={returnClassName}\n      onClick={onClick}\n    >\n      <div\n        className={classNames(\n          'header-button__icon',\n          `header-button__icon--${type}`,\n        )}\n      />\n\n      {!!totalQuantity && (\n        <p className=\"header-button__count\">\n          {totalQuantity}\n        </p>\n      )}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useAppDispatch } from '../../store/hooks';\nimport { actions as menuActions } from '../../store/menuReducer';\n\nexport const Search = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const dispatch = useAppDispatch();\n\n  const location = useLocation();\n\n  const query = searchParams.get('query') || '';\n\n  const onClick = () => dispatch(menuActions.close());\n\n  const isSearch = (location.pathname === '/favourites')\n    || (location.pathname === '/phones')\n    || (location.pathname === '/tablets')\n    || (location.pathname === '/accessories');\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const params = new URLSearchParams(searchParams);\n\n    params.set('query', event.target.value);\n\n    if (!params.get('query')) {\n      params.delete('query');\n    }\n\n    setSearchParams(params);\n  };\n\n  const resetQuery = () => {\n    const params = new URLSearchParams(searchParams);\n\n    params.delete('query');\n\n    setSearchParams(params);\n  };\n\n  return (\n    <div\n      className={classNames(\n        'search',\n        { 'search--is': isSearch },\n      )}\n    >\n      <input\n        type=\"text\"\n        className={classNames(\n          'search__input',\n          { 'search__input--active': query },\n        )}\n        placeholder={`Search in ${location.pathname.slice(1)}...`}\n        onChange={handleQuery}\n        value={query}\n        onClick={onClick}\n      />\n\n      {query ? (\n        <button\n          type=\"button\"\n          className={classNames(\n            'search__icon',\n            { 'search__icon--active': query },\n          )}\n          aria-label=\"Close\"\n          onClick={resetQuery}\n        />\n      ) : (\n        <div className=\"search__icon\" />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { actions as menuActions } from '../../store/menuReducer';\n\nconst returnClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'menu__nav-link',\n  { 'menu__nav-link--active': isActive },\n);\n\nexport const Menu = () => {\n  const dispatch = useAppDispatch();\n  const isMenuActive = useAppSelector(state => state.menu);\n\n  const handleState = () => {\n    if (isMenuActive) {\n      dispatch(menuActions.close());\n    } else {\n      dispatch(menuActions.open());\n    }\n  };\n\n  return (\n    <div className=\"menu\">\n      <button\n        className={classNames(\n          'menu__icon',\n          { 'menu__icon--active': isMenuActive },\n        )}\n        type=\"button\"\n        aria-label=\"Menu\"\n        onClick={handleState}\n      />\n\n      <ul\n        className={classNames(\n          'menu__nav-list',\n          { 'menu__nav-list--active': isMenuActive },\n        )}\n      >\n        <li className=\"menu__nav-item\">\n          <NavLink\n            to=\"/\"\n            className={returnClass}\n            onClick={handleState}\n          >\n            home\n          </NavLink>\n        </li>\n\n        <li className=\"menu__nav-item\">\n          <NavLink\n            to=\"/phones\"\n            className={returnClass}\n            onClick={handleState}\n          >\n            phones\n          </NavLink>\n        </li>\n\n        <li className=\"menu__nav-item\">\n          <NavLink\n            to=\"/tablets\"\n            className={returnClass}\n            onClick={handleState}\n          >\n            tablets\n          </NavLink>\n        </li>\n\n        <li className=\"menu__nav-item\">\n          <NavLink\n            to=\"/accessories\"\n            className={returnClass}\n            onClick={handleState}\n          >\n            accessories\n          </NavLink>\n        </li>\n\n        <li className=\"menu__nav-item menu__nav-item--phone\">\n          <NavLink\n            to=\"/favourites\"\n            className={returnClass}\n            onClick={handleState}\n          >\n            favourites\n          </NavLink>\n        </li>\n\n        <li className=\"menu__nav-item menu__nav-item--phone\">\n          <NavLink\n            to=\"/cart\"\n            className={returnClass}\n            onClick={handleState}\n          >\n            cart\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { Nav } from '../Nav';\nimport { Logo } from '../Logo';\nimport { HeaderButton } from '../HeaderButton';\nimport { Search } from '../Search';\nimport { Menu } from '../Menu';\n\nimport { HeaderButtonIcon } from '../../types/HeaderButtonIcon';\n\nimport { useAppSelector } from '../../store/hooks';\n\nexport const Header = () => {\n  const isMenuOpen = useAppSelector(state => state.menu);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      document.body.classList.add('body-overflow');\n    } else {\n      document.body.classList.remove('body-overflow');\n    }\n  }, [isMenuOpen]);\n\n  const location = useLocation();\n\n  const isCartPage = location.pathname === '/cart';\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__nav-container\">\n        <Menu />\n\n        <Logo />\n\n        {!isCartPage && (\n          <Nav />\n        )}\n      </div>\n\n      <div className=\"header__button-container\">\n        <Search />\n\n        {!isCartPage && (\n          <HeaderButton type={HeaderButtonIcon.Favourites} />\n        )}\n\n        <HeaderButton type={HeaderButtonIcon.Cart} />\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\n\nexport const FooterButton = () => {\n  const scrollUp = () => {\n    window.scrollTo({ top: 0 });\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className=\"footer-button\"\n      onClick={scrollUp}\n    >\n      Back to top\n\n      <div className=\"footer-button__icon\" />\n    </button>\n  );\n};\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nexport const FooterLogo = () => (\n  <Link to=\"/\" className=\"logo\">\n    <img src=\"./img/logo/logo.svg\" alt=\"\" className=\"logo__image\" />\n  </Link>\n);\n","import React from 'react';\n\nexport const FooterNav = () => (\n  <nav className=\"nav footer__nav\">\n    <ul className=\"nav__list\">\n      <li className=\"nav__item\">\n        <a\n          href=\"https://github.com/yevheniikulish\"\n          target=\"_blank\"\n          className=\"nav__link\"\n          rel=\"noreferrer\"\n        >\n          github\n        </a>\n      </li>\n\n      <li className=\"nav__item\">\n        <a\n          href=\"tel:+380932881881\"\n          target=\"_blank\"\n          className=\"nav__link\"\n          rel=\"noreferrer\"\n        >\n          contacts\n        </a>\n      </li>\n\n      <li className=\"nav__item\">\n        <a\n          href=\"https://github.com/yevheniikulish\"\n          target=\"_blank\"\n          className=\"nav__link\"\n          rel=\"noreferrer\"\n        >\n          rights\n        </a>\n      </li>\n    </ul>\n  </nav>\n);\n","import React from 'react';\n\nimport { FooterButton } from '../FooterButton';\nimport { FooterLogo } from '../FooterLogo';\nimport { FooterNav } from '../FooterNav';\n\nexport const Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__container\">\n        <FooterLogo />\n\n        <FooterNav />\n\n        <FooterButton />\n      </div>\n    </footer>\n  );\n};\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport './App.scss';\n\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n\n      <Outlet />\n\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nconst dotsId = [0, 1, 2];\n\nconst photos = [\n  './img/photos/banner-phones.png',\n  './img/photos/banner-tablets.png',\n  './img/photos/banner-accessories.png',\n].map((url) => {\n  return (\n    <img\n      className=\"photos__photo\"\n      src={url}\n      alt=\"Accessories\"\n      key={url}\n    />\n  );\n});\n\nconst duration = 1000;\n\nexport const Photos = () => {\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  useEffect(() => {\n    if (currentPhotoIndex < 0) {\n      setCurrentPhotoIndex(photos.length - 1);\n    }\n\n    if (currentPhotoIndex > photos.length - 1) {\n      setCurrentPhotoIndex(0);\n    }\n\n    setIsDisabled(true);\n\n    const timeout = setTimeout(() => {\n      setIsDisabled(false);\n    }, duration);\n\n    return () => clearTimeout(timeout);\n  }, [currentPhotoIndex]);\n\n  const onLeftClick = () => {\n    setCurrentPhotoIndex(currentIndex => currentIndex - 1);\n  };\n\n  const onRightClick = () => {\n    setCurrentPhotoIndex(currentIndex => currentIndex + 1);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      onRightClick();\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [currentPhotoIndex]);\n\n  const onPhotoChoose = (dotId: number) => () => {\n    setCurrentPhotoIndex(dotId);\n  };\n\n  return (\n    <div className=\"photos\">\n      <div className=\"photos__container\">\n        <button\n          className={cn(\n            'photos__button photos__button--left',\n          )}\n          type=\"button\"\n          aria-label=\"Left button\"\n          onClick={onLeftClick}\n          disabled={isDisabled}\n        />\n\n        <div className=\"photos__slider-track\">\n          {photos.map((photo, photoIndex) => {\n            const newPosition = { ...photo };\n\n            newPosition.props = {\n              ...newPosition.props,\n              className: 'photos__photo photos__photo--next',\n            };\n\n            if (photoIndex === currentPhotoIndex) {\n              newPosition.props = {\n                ...newPosition.props,\n                className: 'photos__photo photos__photo--current',\n              };\n            }\n\n            if (photoIndex === currentPhotoIndex - 1 || (\n              currentPhotoIndex === 0 && photoIndex === photos.length - 1\n            )) {\n              newPosition.props = {\n                ...newPosition.props,\n                className: 'photos__photo photos__photo--prev',\n              };\n            }\n\n            return newPosition;\n          })}\n        </div>\n\n        <button\n          className={cn(\n            'photos__button photos__button--right',\n          )}\n          type=\"button\"\n          aria-label=\"Right button\"\n          onClick={onRightClick}\n          disabled={isDisabled}\n        />\n      </div>\n\n      <div className=\"photos__dots\">\n        {dotsId.map(id => (\n          <button\n            key={id}\n            type=\"button\"\n            aria-label={`Photo ${id + 1}`}\n            className={cn(\n              'photos__dot',\n              {\n                'photos__dot--active': id === currentPhotoIndex,\n              },\n            )}\n            onClick={onPhotoChoose(id)}\n            disabled={isDisabled}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","const apiUrl = 'https://mate-academy.github.io/react_phone-catalog/';\n\nexport const request = (url: string) => {\n  return fetch(apiUrl + url)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n};\n\nexport const getProducts = () => {\n  return request('_new/products.json');\n};\n","import { Product } from '../types/Product';\n\ntype Function = (\n  setIsLeftButtonDisabled: (value: React.SetStateAction<boolean>) => void,\n  setIsRightButtonDisabled: (value: React.SetStateAction<boolean>) => void,\n  products: Product[],\n  elementWidth: number,\n  translate: number,\n) => void;\n\nexport const setDisabledButton: Function = (\n  setIsLeftButtonDisabled,\n  setIsRightButtonDisabled,\n  products,\n  elementWidth,\n  translate,\n) => {\n  if (translate === 0) {\n    setIsLeftButtonDisabled(true);\n  } else if ((products.length - 4) * elementWidth === -translate) {\n    setIsRightButtonDisabled(true);\n  } else {\n    setIsLeftButtonDisabled(false);\n    setIsRightButtonDisabled(false);\n  }\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { CartType } from '../types/CartType';\n\nconst initialState: CartType[] = [];\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    add: (cart, action: PayloadAction<CartType>) => {\n      cart.push(action.payload);\n      localStorage.setItem('cart', JSON.stringify(cart));\n    },\n    take: (cart, action: PayloadAction<CartType>) => {\n      const newCart = cart.filter(product => product.id !== action.payload.id);\n\n      localStorage.setItem('cart', JSON.stringify(newCart));\n\n      return newCart;\n    },\n    updateQuantity: (cart, action: PayloadAction<CartType>) => {\n      const newCart = cart.map(product => {\n        if (product.id !== action.payload.id) {\n          return product;\n        }\n\n        return { ...product, quantity: action.payload.quantity };\n      });\n\n      localStorage.setItem('cart', JSON.stringify(newCart));\n\n      return newCart;\n    },\n    set: () => {\n      return JSON.parse(localStorage.getItem('cart') || '[]');\n    },\n  },\n});\n\nexport const { actions } = cartSlice;\nexport default cartSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { Product } from '../types/Product';\n\nconst initialState: Product[] = [];\n\nconst favouritesSlice = createSlice({\n  name: 'favourites',\n  initialState,\n  reducers: {\n    add: (favourites, action: PayloadAction<Product>) => {\n      favourites.push(action.payload);\n      localStorage.setItem('favourites', JSON.stringify(favourites));\n    },\n    take: (favourites, action: PayloadAction<Product>) => {\n      const newFavourites = favourites.filter(product => product.id !== action.payload.id);\n\n      localStorage.setItem('favourites', JSON.stringify(newFavourites));\n\n      return newFavourites;\n    },\n    set: () => {\n      return JSON.parse(localStorage.getItem('favourites') || '[]');\n    },\n  },\n});\n\nexport const { actions } = favouritesSlice;\nexport default favouritesSlice.reducer;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Product } from '../../types/Product';\n\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { actions as cartActions } from '../../store/cartReducer';\nimport { actions as favouritesActions } from '../../store/favouritesReducer';\n\ntype Props = {\n  product: Product;\n};\n\nexport const ProductCard: React.FC<Props> = ({ product }) => {\n  const dispatch = useAppDispatch();\n  const cart = useAppSelector(state => state.cart);\n  const favourites = useAppSelector(state => state.favourites);\n\n  const {\n    image,\n    name,\n    price,\n    fullPrice,\n    screen,\n    capacity,\n    ram,\n    phoneId,\n  } = product;\n\n  const addProductToCart = () => {\n    dispatch(cartActions.add({ product, id: product.id, quantity: 1 }));\n  };\n\n  const takeProductFromCart = () => {\n    dispatch(cartActions.take({ product, id: product.id, quantity: 1 }));\n  };\n\n  const toggleFavouritesButton = () => (favourites.some(favourite => favourite.id === product.id)\n    ? dispatch(favouritesActions.take(product))\n    : dispatch(favouritesActions.add(product)));\n\n  useEffect(() => {\n    dispatch(cartActions.set());\n    dispatch(favouritesActions.set());\n  }, []);\n\n  return (\n    <div\n      className=\"product-card\"\n      data-cy=\"cardsContainer\"\n    >\n      <Link\n        to={`/phones/${phoneId}`}\n        className=\"product-card__container\"\n      >\n        <img\n          src={`./${image}`}\n          alt={name}\n          className=\"product-card__image\"\n        />\n\n        <p className=\"product-card__name\">\n          {name}\n        </p>\n      </Link>\n\n      <div className=\"product-card__container\">\n        <p className=\"product-card__price\">\n          {`$${Math.round(price / 10) * 10 - 1}`}\n\n          {price !== fullPrice && (\n            <>\n              {' '}\n\n              <span className=\"product-card__full-price\">\n                {`$${Math.round(fullPrice / 10) * 10 - 1}`}\n              </span>\n            </>\n          )}\n        </p>\n\n        <div className=\"product-card__line\" />\n\n        <div className=\"product-card__text-box\">\n          <p className=\"product-card__param-name\">\n            Screen\n          </p>\n\n          <p className=\"product-card__param-value\">\n            {screen}\n          </p>\n        </div>\n\n        <div className=\"product-card__text-box\">\n          <p className=\"product-card__param-name\">\n            Capacity\n          </p>\n\n          <p className=\"product-card__param-value\">\n            {capacity}\n          </p>\n        </div>\n\n        <div className=\"product-card__text-box\">\n          <p className=\"product-card__param-name\">\n            RAM\n          </p>\n\n          <p className=\"product-card__param-value\">\n            {ram}\n          </p>\n        </div>\n\n        <div className=\"product-card__interaction-block\">\n          {cart.some(productFromCart => productFromCart.id === product.id) ? (\n            <button\n              className={classNames(\n                'product-card__cart-button',\n                'product-card__cart-button--added',\n              )}\n              type=\"button\"\n              onClick={takeProductFromCart}\n            >\n              Added to cart\n            </button>\n          ) : (\n            <button\n              className=\"product-card__cart-button\"\n              type=\"button\"\n              onClick={addProductToCart}\n            >\n              Add to cart\n            </button>\n          )}\n\n          <button\n            type=\"button\"\n            className=\"product-card__favourites-button\"\n            onClick={toggleFavouritesButton}\n          >\n            <div\n              className={classNames(\n                'product-card__favourites-icon',\n                {\n                  'product-card__favourites-icon--added': (\n                    favourites.some(favourite => favourite.id === product.id)\n                  ),\n                },\n              )}\n            />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { RefObject } from 'react';\n\nimport { ProductCard } from '../ProductCard';\n\nimport { Product } from '../../types/Product';\n\ntype Props = {\n  title: string;\n  onLeftClick: () => void;\n  onRightClick: () => void;\n  isLeftButtonDisabled: boolean;\n  isRightButtonDisabled: boolean;\n  reference: RefObject<HTMLDivElement>;\n  translate: number;\n  products: Product[];\n};\n\nexport const SliderContent: React.FC<Props> = ({\n  title,\n  onLeftClick,\n  onRightClick,\n  isLeftButtonDisabled,\n  isRightButtonDisabled,\n  reference,\n  translate,\n  products,\n}) => {\n  return (\n    <>\n      <div className=\"slider__panel\">\n        <h2 className=\"slider__title\">\n          {title}\n        </h2>\n\n        <div className=\"slider__buttons\">\n          <button\n            className=\"slider__button slider__button--left\"\n            type=\"button\"\n            aria-label=\"Left button\"\n            onClick={onLeftClick}\n            disabled={isLeftButtonDisabled}\n          />\n\n          <button\n            className=\"slider__button slider__button--right\"\n            type=\"button\"\n            aria-label=\"Right button\"\n            onClick={onRightClick}\n            disabled={isRightButtonDisabled}\n          />\n        </div>\n      </div>\n\n      <div\n        className=\"slider__track-container\"\n        ref={reference}\n      >\n        <div\n          className=\"slider__track\"\n          style={{ transform: `translate(${translate}px)` }}\n        >\n          {products.map(product => {\n            return (\n              <ProductCard\n                product={product}\n                key={product.id}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, {\n  RefObject,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport { Product } from '../../types/Product';\n\nimport { getHotPriceProducts } from '../../functions/getHotPriceProducts';\nimport { setDisabledButton } from '../../functions/setDisabledButton';\n\nimport { SliderContent } from '../SliderContent';\n\nconst title = 'Hot prices';\n\nconst gap = 16;\n\nexport const ProductsSlider = () => {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [translate, setTranslate] = useState(0);\n  const [isLeftButtonDisabled, setIsLeftButtonDisabled] = useState(false);\n  const [isRightButtonDisabled, setIsRightButtonDisabled] = useState(false);\n\n  const ref = useRef() as RefObject<HTMLDivElement>;\n\n  const blockWidth = ref.current?.clientWidth || 0;\n\n  const elementWidth = useMemo(() => {\n    if (blockWidth === (71 * gap)) {\n      return (blockWidth + gap) / 4;\n    }\n\n    if (blockWidth === (53 * gap)) {\n      return (blockWidth + gap) / 3;\n    }\n\n    if (blockWidth === (35 * gap)) {\n      return (blockWidth + gap) / 2;\n    }\n\n    return blockWidth + gap;\n  }, [blockWidth]);\n\n  useEffect(() => {\n    getHotPriceProducts()\n      .then(setProducts)\n      .catch(() => new Error('Loading products error'));\n\n    return () => setProducts(products);\n  }, []);\n\n  useEffect(() => {\n    setDisabledButton(\n      setIsLeftButtonDisabled,\n      setIsRightButtonDisabled,\n      products,\n      elementWidth,\n      translate,\n    );\n  }, [translate]);\n\n  const onLeftClick = () => {\n    setTranslate(currentTranslate => currentTranslate + elementWidth);\n  };\n\n  const onRightClick = () => {\n    setTranslate(currentTranslate => currentTranslate - elementWidth);\n  };\n\n  return (\n    <div className=\"slider slider--first\">\n      <SliderContent\n        title={title}\n        onLeftClick={onLeftClick}\n        onRightClick={onRightClick}\n        isLeftButtonDisabled={isLeftButtonDisabled}\n        isRightButtonDisabled={isRightButtonDisabled}\n        reference={ref}\n        translate={translate}\n        products={products}\n      />\n    </div>\n  );\n};\n","import { getProducts } from './getProducts';\n\nimport { Product } from '../types/Product';\n\nexport const getHotPriceProducts = () => {\n  return getProducts()\n    .then((products: Product[]) => products\n      .sort((product1, product2) => (\n        product2.fullPrice - product1.fullPrice\n          + product1.price - product2.price\n      ))\n      .slice(0, 12));\n};\n","import { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\n\nimport { getProducts } from '../../functions/getProducts';\n\nimport { Product } from '../../types/Product';\n\nexport const Categories = () => {\n  const [tabletsCount, setTabletsCount] = useState(0);\n  const [accessoriesCount, setAccessoriesCount] = useState(0);\n  const [phonesCount, setPhonesCount] = useState(0);\n\n  useEffect(() => {\n    getProducts()\n      .then((products: Product[]) => {\n        setPhonesCount(products.filter(\n          product => product.category === 'phones',\n        ).length);\n      })\n      .catch(() => {\n        throw new Error('Loading product error');\n      });\n\n    return () => {\n      setTabletsCount(0);\n      setAccessoriesCount(0);\n      setPhonesCount(0);\n    };\n  }, []);\n\n  return (\n    <div className=\"categories\">\n      <h2 className=\"categories__title\">\n        Shop by category\n      </h2>\n\n      <div\n        className=\"categories__container\"\n        data-cy=\"categoryLinksContainer\"\n      >\n        <Link\n          to=\"/phones\"\n          className=\"categories__link categories__link--1\"\n        >\n          <div className=\"categories__image categories__image--1\" />\n\n          <p className=\"categories__category\">\n            Mobile phones\n          </p>\n\n          <p className=\"categories__count\">\n            {`${phonesCount} models`}\n          </p>\n        </Link>\n\n        <Link\n          to=\"/tablets\"\n          className=\"categories__link categories__link--2\"\n        >\n          <div className=\"categories__image categories__image--2\" />\n\n          <p className=\"categories__category\">\n            Tablets\n          </p>\n\n          <p className=\"categories__count\">\n            {`${tabletsCount} models`}\n          </p>\n        </Link>\n\n        <Link\n          to=\"/accessories\"\n          className=\"categories__link categories__link--3\"\n        >\n          <div className=\"categories__image categories__image--3\" />\n\n          <p className=\"categories__category\">\n            Accessories\n          </p>\n\n          <p className=\"categories__count\">\n            {`${accessoriesCount} models`}\n          </p>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React, {\n  RefObject,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport { Product } from '../../types/Product';\n\nimport { getBrandNewProducts } from '../../functions/getBrandNewProducts';\nimport { setDisabledButton } from '../../functions/setDisabledButton';\n\nimport { SliderContent } from '../SliderContent';\n\nconst title = 'Brands new models';\n\nconst gap = 16;\n\nexport const NewBrands = () => {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [translate, setTranslate] = useState(0);\n  const [isLeftButtonDisabled, setIsLeftButtonDisabled] = useState(false);\n  const [isRightButtonDisabled, setIsRightButtonDisabled] = useState(false);\n\n  const ref = useRef() as RefObject<HTMLDivElement>;\n\n  const blockWidth = ref.current?.clientWidth || 0;\n\n  const elementWidth = useMemo(() => {\n    if (blockWidth === (71 * gap)) {\n      return (blockWidth + gap) / 4;\n    }\n\n    if (blockWidth === (53 * gap)) {\n      return (blockWidth + gap) / 3;\n    }\n\n    if (blockWidth === (35 * gap)) {\n      return (blockWidth + gap) / 2;\n    }\n\n    return blockWidth + gap;\n  }, [blockWidth]);\n\n  useEffect(() => {\n    getBrandNewProducts()\n      .then(setProducts)\n      .catch(() => new Error('Loading products error'));\n\n    return () => setProducts([]);\n  }, []);\n\n  useEffect(() => {\n    setDisabledButton(\n      setIsLeftButtonDisabled,\n      setIsRightButtonDisabled,\n      products,\n      elementWidth,\n      translate,\n    );\n  }, [translate]);\n\n  const onLeftClick = () => {\n    setTranslate(currentTranslate => currentTranslate + elementWidth);\n  };\n\n  const onRightClick = () => {\n    setTranslate(currentTranslate => currentTranslate - elementWidth);\n  };\n\n  return (\n    <div className=\"slider\">\n      <SliderContent\n        title={title}\n        onLeftClick={onLeftClick}\n        onRightClick={onRightClick}\n        isLeftButtonDisabled={isLeftButtonDisabled}\n        isRightButtonDisabled={isRightButtonDisabled}\n        reference={ref}\n        translate={translate}\n        products={products}\n      />\n    </div>\n  );\n};\n","import { getProducts } from './getProducts';\n\nimport { Product } from '../types/Product';\n\nexport const getBrandNewProducts = () => {\n  return getProducts()\n    .then((products: Product[]) => products\n      .filter(product => product.year === 2019)\n      .sort((product1, product2) => (\n        product2.fullPrice - product1.fullPrice\n      ))\n      .slice(0, 12));\n};\n","import React from 'react';\n\nimport { Photos } from '../../components/Photos';\nimport { ProductsSlider } from '../../components/ProductsSlider';\nimport { Categories } from '../../components/Catagories';\nimport { NewBrands } from '../../components/NewBrands';\n\nexport const HomePage = () => {\n  return (\n    <main className=\"home page__main-container\">\n      <Photos />\n\n      <ProductsSlider />\n\n      <Categories />\n\n      <NewBrands />\n    </main>\n  );\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  options: string[];\n  label: string;\n  value: string;\n  setOption: React.Dispatch<React.SetStateAction<string>>;\n  valueKey: string;\n  handleOnClick: (\n    option: string,\n    setOption: React.Dispatch<React.SetStateAction<string>>,\n    valueKey: string\n  ) => void;\n};\n\nexport const Selector: React.FC<Props> = ({\n  options,\n  label,\n  value,\n  setOption,\n  valueKey,\n  handleOnClick,\n}) => {\n  const [areOptionsOpen, setAreOptionsOpen] = useState(false);\n\n  const handleOnFocus = () => {\n    setAreOptionsOpen(!areOptionsOpen);\n  };\n\n  return (\n    <div className=\"products-list__sort\">\n      <div className=\"products-list__sort-by\">\n        {label}\n      </div>\n\n      <button\n        className={cn(\n          'products-list__selector',\n          { 'products-list__selector--active': areOptionsOpen },\n        )}\n        type=\"button\"\n        onClick={handleOnFocus}\n      >\n        {value}\n\n        <div\n          className={cn(\n            'products-list__icon',\n            { 'products-list__icon--active': areOptionsOpen },\n          )}\n        />\n      </button>\n\n      {areOptionsOpen && (\n        <div className=\"products-list__options-container\">\n          {options.map(option => (\n            <button\n              className=\"products-list__option\"\n              type=\"button\"\n              key={option}\n              onClick={() => {\n                handleOnClick(option, setOption, valueKey);\n                setAreOptionsOpen(false);\n              }}\n            >\n              {option}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  currentPage: string;\n  pagesCount: number;\n  onClick: (page: string) => () => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  pagesCount,\n  onClick,\n}) => {\n  const returnButtons = (count: number) => {\n    let pages = [1, +currentPage - 1, +currentPage, +currentPage + 1, count];\n\n    if (+currentPage === 1 || +currentPage === 2) {\n      pages = [1, 2, 3, 4, count];\n    }\n\n    if (+currentPage === count - 1 || +currentPage === count) {\n      pages = [1, count - 3, count - 2, count - 1, count];\n    }\n\n    if (count < 5) {\n      pages = [];\n\n      for (let i = 1; i <= count; i += 1) {\n        pages.push(i);\n      }\n    }\n\n    return pages.map(page => (\n      <button\n        className={cn(\n          'pagination__button',\n          { 'pagination__button--active': (+currentPage === page) },\n        )}\n        type=\"button\"\n        key={page}\n        onClick={onClick(page.toString())}\n      >\n        {page}\n      </button>\n    ));\n  };\n\n  return (\n    <div className=\"pagination\">\n      <div className=\"pagination__container\">\n        <button\n          className=\"pagination__button pagination__button--left\"\n          data-cy=\"paginationLeft\"\n          aria-label=\"Button left\"\n          type=\"button\"\n          onClick={onClick((+currentPage - 1).toString())}\n          disabled={+currentPage === 1}\n        />\n\n        {returnButtons(pagesCount)}\n\n        <button\n          className=\"pagination__button pagination__button--right\"\n          data-cy=\"paginationRight\"\n          aria-label=\"Button right\"\n          type=\"button\"\n          onClick={onClick((+currentPage + 1).toString())}\n          disabled={+currentPage === pagesCount}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { ProductCard } from '../ProductCard';\nimport { Selector } from '../Selector';\nimport { Pagination } from '../Pagination';\n\nimport { Product } from '../../types/Product';\n\ntype Props = {\n  products: Product[] | null;\n};\n\nconst sortLabels = ['Newest', 'Alphabetically', 'Cheapest'];\nconst pageValues = ['4', '8', '16', 'all'];\nconst sortValues = ['age', 'name', 'price'];\n\nconst labels = ['Sort by', 'Items on page'];\n\nconst valuesKeys = ['sort', 'perPage', 'page'];\n\nexport const List: React.FC<Props> = ({ products }) => {\n  const [sortedBy, setSortedBy] = useState('age');\n  const [perPage, setPerPage] = useState('16');\n  const [pagesCount, setPagesCount] = useState(1);\n  const [currentPage, setCurrentPage] = useState('1');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [visibleProducts, setVisibleProducts] = useState(products);\n\n  useEffect(() => {\n    const params = new URLSearchParams(searchParams);\n\n    setSortedBy(params.get(valuesKeys[0]) || sortedBy);\n    setPerPage(params.get(valuesKeys[1]) || perPage);\n    setCurrentPage(params.get(valuesKeys[2]) || currentPage);\n\n    setSearchParams(params);\n  }, []);\n\n  useEffect(() => {\n    if (perPage === 'all') {\n      setPagesCount(1);\n\n      return;\n    }\n\n    const newPagesCount = Math.ceil((products?.length || 0) / +perPage);\n\n    if (newPagesCount < +currentPage) {\n      setCurrentPage('1');\n    }\n\n    setPagesCount(newPagesCount);\n  }, [perPage, searchParams, products]);\n\n  useEffect(() => {\n    const sorted = products?.sort((product1, product2) => {\n      switch (sortedBy) {\n        case 'name':\n          return product1.name.localeCompare(product2.name);\n\n        case 'age':\n          return product2.year - product1.year;\n\n        case 'price':\n          return product1.price - product2.price;\n\n        default:\n          throw new Error('Sort error');\n      }\n    });\n\n    const filtered = (perPage === 'all')\n      ? (sorted?.slice(0) || null)\n      : sorted\n        ?.slice((+currentPage - 1) * +perPage, +currentPage * +perPage) || null;\n\n    setVisibleProducts(filtered);\n  }, [sortedBy, perPage, currentPage, products]);\n\n  const handleOnClick = (\n    option: string,\n    setOption: React.Dispatch<React.SetStateAction<string>>,\n    valueKey: string,\n  ) => {\n    const params = new URLSearchParams(searchParams);\n\n    const param = (valueKey === 'sort')\n      ? sortValues[sortLabels.indexOf(option)]\n      : option;\n\n    setOption(param);\n    params.set(valueKey, param);\n    setCurrentPage('1');\n\n    setSearchParams(params);\n  };\n\n  const handlePage = (listPage: string) => () => {\n    const params = new URLSearchParams(searchParams);\n\n    setCurrentPage(listPage);\n    params.set('page', listPage);\n\n    setSearchParams(params);\n  };\n\n  return (\n    <div\n      className=\"products-list\"\n      data-cy=\"productList\"\n    >\n      <div className=\"products-list__sort-form\">\n        <Selector\n          options={sortLabels}\n          label={labels[0]}\n          value={sortLabels[sortValues.indexOf(sortedBy)]}\n          setOption={setSortedBy}\n          valueKey={valuesKeys[0]}\n          handleOnClick={handleOnClick}\n        />\n\n        <Selector\n          options={pageValues}\n          label={labels[1]}\n          value={perPage}\n          setOption={setPerPage}\n          valueKey={valuesKeys[1]}\n          handleOnClick={handleOnClick}\n        />\n      </div>\n\n      <div className=\"products-list__container\">\n        {visibleProducts?.map(\n          product => (\n            <ProductCard\n              key={product.id}\n              product={product}\n            />\n          ),\n        )}\n      </div>\n\n      {(pagesCount > 1) && (\n        <Pagination\n          currentPage={currentPage}\n          pagesCount={pagesCount}\n          onClick={handlePage}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Loader = () => {\n  return (\n    <div className=\"loader\">\n      <div className=\"loader__spiner\" />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  title: string;\n};\n\nexport const NoResults: React.FC<Props> = ({ title }) => {\n  return (\n    <div className=\"no-results\">\n      {`${title} not found`}\n    </div>\n  );\n};\n","import React, { useMemo } from 'react';\nimport {\n  Link,\n  useLocation,\n} from 'react-router-dom';\n\nimport { capitalizedLetter } from '../../functions/capitalizedLetter';\n\ntype Props = {\n  name: string;\n};\n\nexport const Breadcrumbs: React.FC<Props> = ({ name }) => {\n  const location = useLocation();\n\n  const page = useMemo(() => (\n    location.pathname.split('/').slice(1)[0]\n  ), []);\n\n  const pageName = useMemo(() => (\n    capitalizedLetter(page)\n  ), []);\n\n  return (\n    <div className=\"breadcrumbs\">\n      <Link to=\"/home\" className=\"breadcrumbs__home\" />\n\n      <div className=\"breadcrumbs__icon\" />\n\n      {name ? (\n        <>\n          <Link to={`/${page}`} className=\"breadcrumbs__link\">\n            {pageName}\n          </Link>\n\n          <div className=\"breadcrumbs__icon\" />\n\n          <p className=\"breadcrumbs__text\">\n            {name}\n          </p>\n        </>\n      ) : (\n        <p className=\"breadcrumbs__text\">\n          {pageName}\n        </p>\n      )}\n    </div>\n  );\n};\n","export const capitalizedLetter = (string: string) => {\n  return string[0].toUpperCase() + string.slice(1);\n};\n","import React from 'react';\n\ntype Props = {\n  title: string;\n};\n\nexport const NoSearchResults: React.FC<Props> = ({ title }) => {\n  return (\n    <div className=\"no-results\">\n      {`${title} not found by this params`}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { List } from '../List';\nimport { Loader } from '../Loader';\n\nimport { NoResults } from '../NoResults';\nimport { Breadcrumbs } from '../Breadcrumbs';\nimport { NoSearchResults } from '../NoSearchResults';\n\nimport { Product } from '../../types/Product';\n\ntype Props = {\n  products: Product[] | null;\n  isLoading: boolean;\n  title: string;\n  isNoSearchResults: boolean;\n};\n\nexport const Content: React.FC<Props> = ({\n  products,\n  isLoading,\n  title,\n  isNoSearchResults,\n}) => (\n  <div className=\"phones page__phones\">\n    {isLoading && (\n      <Loader />\n    )}\n\n    {!isLoading && (\n      <>\n        <Breadcrumbs name=\"\" />\n\n        <h1 className=\"phones__title\">\n          {title}\n        </h1>\n\n        <p className=\"phones__count\">\n          {`${products?.length} model${products?.length === 1 ? '' : 's'}`}\n        </p>\n\n        {isNoSearchResults && (\n          <NoSearchResults title={title} />\n        )}\n\n        {!isNoSearchResults && (!products?.length ? (\n          <NoResults title={title} />\n        ) : (\n          <List products={products} />\n        ))}\n      </>\n    )}\n  </div>\n);\n","import { getProducts } from './getProducts';\n\nimport { Product } from '../types/Product';\n\ntype Function = (\n  category: string,\n  setProducts: (value: React.SetStateAction<Product[] | null>) => void,\n  setIsLoading: (value: React.SetStateAction<boolean>) => void,\n) => void;\n\nexport const getProductsOfCategory: Function = (category, setProducts, setIsLoading) => {\n  setIsLoading(true);\n\n  getProducts()\n    .then((products: Product[]) => {\n      setProducts(products.filter(\n        product => product.category === category,\n      ));\n    })\n    .catch(() => {\n      throw new Error('Loading products error');\n    })\n    .finally(() => setIsLoading(false));\n};\n","import { Product } from '../types/Product';\n\ntype Function = (\n  products: Product[] | null,\n  appliedQuery: string,\n  setVisibleProducts: (value: React.SetStateAction<Product[] | null>) => void,\n  setIsNoSearchResults: (value: React.SetStateAction<boolean>) => void,\n) => void;\n\nexport const filterProducts: Function = (\n  products,\n  appliedQuery,\n  setVisibleProducts,\n  setIsNoSearchResults,\n) => {\n  const filteredProducts = products?.filter(product => (\n    product.name.trim().toLowerCase().includes(appliedQuery.toLowerCase())\n  ));\n\n  setVisibleProducts(filteredProducts || []);\n\n  setIsNoSearchResults(!filteredProducts?.length && !!products?.length);\n};\n","import React, {\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Content } from '../../components/Content';\n\nimport { Product } from '../../types/Product';\n\nimport { getProductsOfCategory } from '../../functions/getProductsOfCategory';\nimport { filterProducts } from '../../functions/filterProducts';\n\nconst title = 'Mobile phones';\n\nexport const PhonesPage = () => {\n  const [phones, setPhones] = useState<Product[] | null>(null);\n  const [visiblePhones, setVisiblePhones] = useState<Product[] | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isNoSearchResults, setIsNoSearchResults] = useState(false);\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  const timerId = useRef(0);\n\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get('query')?.split('+').join(' ') || '';\n\n  useEffect(() => {\n    getProductsOfCategory('phones', setPhones, setIsLoading);\n  }, []);\n\n  useEffect(() => {\n    timerId.current = window.setTimeout(() => {\n      setAppliedQuery(query);\n    }, 1000);\n\n    return () => clearTimeout(timerId.current);\n  }, [query]);\n\n  useEffect(() => {\n    filterProducts(phones, appliedQuery, setVisiblePhones, setIsNoSearchResults);\n  }, [appliedQuery, phones]);\n\n  return (\n    <Content\n      isNoSearchResults={isNoSearchResults}\n      products={visiblePhones}\n      isLoading={isLoading}\n      title={title}\n    />\n  );\n};\n","import React, {\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Content } from '../../components/Content';\n\nimport { Product } from '../../types/Product';\n\nimport { getProductsOfCategory } from '../../functions/getProductsOfCategory';\nimport { filterProducts } from '../../functions/filterProducts';\n\nconst title = 'Tablets';\n\nexport const TabletsPage = () => {\n  const [tablets, setTablets] = useState<Product[] | null>(null);\n  const [visibleTablets, setVisibleTablets] = useState<Product[] | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isNoSearchResults, setIsNoSearchResults] = useState(false);\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  const timerId = useRef(0);\n\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get('query')?.split('+').join(' ') || '';\n\n  useEffect(() => {\n    getProductsOfCategory('tablets', setTablets, setIsLoading);\n  }, []);\n\n  useEffect(() => {\n    timerId.current = window.setTimeout(() => {\n      setAppliedQuery(query);\n    }, 1000);\n\n    return () => clearTimeout(timerId.current);\n  }, [query]);\n\n  useEffect(() => {\n    filterProducts(tablets, appliedQuery, setVisibleTablets, setIsNoSearchResults);\n  }, [appliedQuery, tablets]);\n\n  return (\n    <Content\n      isNoSearchResults={isNoSearchResults}\n      products={visibleTablets}\n      isLoading={isLoading}\n      title={title}\n    />\n  );\n};\n","import React, {\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Content } from '../../components/Content';\n\nimport { Product } from '../../types/Product';\n\nimport { getProductsOfCategory } from '../../functions/getProductsOfCategory';\nimport { filterProducts } from '../../functions/filterProducts';\n\nconst title = 'Accessories';\n\nexport const AccessoriesPage = () => {\n  const [accessories, setAccessories] = useState<Product[] | null>(null);\n  const [\n    visibleAccessories,\n    setVisibleAccessories,\n  ] = useState<Product[] | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isNoSearchResults, setIsNoSearchResults] = useState(false);\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  const timerId = useRef(0);\n\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get('query')?.split('+').join(' ') || '';\n\n  useEffect(() => {\n    getProductsOfCategory('accessories', setAccessories, setIsLoading);\n  }, []);\n\n  useEffect(() => {\n    timerId.current = window.setTimeout(() => {\n      setAppliedQuery(query);\n    }, 1000);\n\n    return () => clearTimeout(timerId.current);\n  }, [query]);\n\n  useEffect(() => {\n    filterProducts(accessories, appliedQuery, setVisibleAccessories, setIsNoSearchResults);\n  }, [appliedQuery, accessories]);\n\n  return (\n    <Content\n      isNoSearchResults={isNoSearchResults}\n      products={visibleAccessories}\n      isLoading={isLoading}\n      title={title}\n    />\n  );\n};\n","import { getProducts } from './getProducts';\n\nimport { Product } from '../types/Product';\n\nconst returnRandomList = (products: Product[]) => {\n  const resultRandomList: Product[] = [];\n\n  const max = products.length;\n\n  const getRandomProduct = () => (\n    Math.floor(Math.random() * max)\n  );\n\n  for (let i = 0; i < 10 && i < max; i += 1) {\n    let randomProduct = products[getRandomProduct()];\n\n    while (resultRandomList.includes(randomProduct)) {\n      randomProduct = products[getRandomProduct()];\n    }\n\n    resultRandomList.push(randomProduct);\n  }\n\n  return resultRandomList;\n};\n\nexport const getSuggestedProducts = () => {\n  return getProducts()\n    .then(returnRandomList);\n};\n","import React, {\n  RefObject,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport { getSuggestedProducts } from '../../functions/getSuggestedProducts';\n\nimport { Product } from '../../types/Product';\n\nimport { SliderContent } from '../SliderContent';\nimport { setDisabledButton } from '../../functions/setDisabledButton';\n\nconst title = 'You may also like';\n\nconst gap = 16;\n\nexport const Like = () => {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [translate, setTranslate] = useState(0);\n  const [isLeftButtonDisabled, setIsLeftButtonDisabled] = useState(false);\n  const [isRightButtonDisabled, setIsRightButtonDisabled] = useState(false);\n\n  const ref = useRef() as RefObject<HTMLDivElement>;\n\n  const blockWidth = ref.current?.clientWidth || 0;\n\n  const elementWidth = useMemo(() => {\n    if (blockWidth === (71 * gap)) {\n      return (blockWidth + gap) / 4;\n    }\n\n    if (blockWidth === (53 * gap)) {\n      return (blockWidth + gap) / 3;\n    }\n\n    if (blockWidth === (35 * gap)) {\n      return (blockWidth + gap) / 2;\n    }\n\n    return blockWidth + gap;\n  }, [blockWidth]);\n\n  useEffect(() => {\n    getSuggestedProducts()\n      .then(setProducts)\n      .catch(() => new Error('Loading products error'));\n\n    return () => setProducts(products);\n  }, []);\n\n  useEffect(() => {\n    setDisabledButton(\n      setIsLeftButtonDisabled,\n      setIsRightButtonDisabled,\n      products,\n      elementWidth,\n      translate,\n    );\n  }, [translate]);\n\n  const onLeftClick = () => {\n    setTranslate(currentTranslate => currentTranslate + elementWidth);\n  };\n\n  const onRightClick = () => {\n    setTranslate(currentTranslate => currentTranslate - elementWidth);\n  };\n\n  return (\n    <div className=\"slider\">\n      <SliderContent\n        title={title}\n        onLeftClick={onLeftClick}\n        onRightClick={onRightClick}\n        isLeftButtonDisabled={isLeftButtonDisabled}\n        isRightButtonDisabled={isRightButtonDisabled}\n        reference={ref}\n        translate={translate}\n        products={products}\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const BackButton = () => {\n  const goBack = () => {\n    window.history.back();\n  };\n\n  return (\n    <button\n      className=\"back-button\"\n      type=\"button\"\n      onClick={goBack}\n    >\n      <div className=\"back-button__icon\" />\n\n      <p className=\"back-button__text\">\n        Back\n      </p>\n    </button>\n  );\n};\n","type Colors = {\n  [key: string]: string;\n};\n\nexport const colors: Colors = {\n  black: '#222',\n  rosegold: '#e2a0b0',\n  gold: '#ffd799',\n  silver: '#eee',\n  spacegray: '#717378',\n  green: '#8eb',\n  yellow: '#fe0',\n  white: '#ffe',\n  purple: '#d0a0d0',\n  red: '#e23',\n  midnightgreen: '#004953',\n  coral: '#f88379',\n};\n","export const info = [\n  'Screen',\n  'Resolution',\n  'Processor',\n  'RAM',\n];\n\nexport const specsNames = [\n  ...info,\n  'Capacity',\n  'Camera',\n  'Zoom',\n  'Cell',\n];\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Loader } from '../../components/Loader';\nimport { Like } from '../../components/Like';\nimport { BackButton } from '../../components/BackButton';\nimport { Breadcrumbs } from '../../components/Breadcrumbs';\n\nimport { getProducts } from '../../functions/getProducts';\nimport { getProductInfo } from '../../functions/getProductInfo';\n\nimport { ProductInfo } from '../../types/ProductInfo';\nimport { Product } from '../../types/Product';\n\nimport { colors } from '../../services/colors';\nimport { info, specsNames } from '../../services/specs';\n\nimport { actions as cartActions } from '../../store/cartReducer';\nimport { actions as favouritesActions } from '../../store/favouritesReducer';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\n\nexport const ProductDetailsPage = () => {\n  const [productInfo, setProductInfo] = useState<ProductInfo | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentImage, setCurrentImage] = useState('');\n  const [currentCapacity, setCurrentCapacity] = useState('');\n  const [currentColor, setCurrentColor] = useState('');\n  const [product, setProduct] = useState<Product | null>(null);\n  const [isError, setIsError] = useState(false);\n\n  const dispatch = useAppDispatch();\n  const cart = useAppSelector(state => state.cart);\n  const favourites = useAppSelector(state => state.favourites);\n\n  useEffect(() => {\n    dispatch(cartActions.set());\n    dispatch(favouritesActions.set());\n  }, []);\n\n  const { productId } = useParams();\n\n  useEffect(() => {\n    getProducts()\n      .then(phones => {\n        setProduct(phones.find((\n          desiredPhone: Product,\n        ) => desiredPhone.phoneId === productId));\n      })\n      .catch(() => {\n        throw new Error('Loading phones error');\n      });\n  }, [productInfo]);\n\n  useEffect(() => {\n    const specs = productId?.split('-');\n\n    setCurrentCapacity(specs?.at(-2)?.toUpperCase() || '');\n    setCurrentColor(specs?.at(-1) || '');\n  }, [productId]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getProductInfo(productId || '')\n      .then(currentPhone => {\n        setProductInfo(currentPhone);\n        setCurrentImage(currentPhone.images[0]);\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [productId]);\n\n  const handleCurrentImage = (image: string) => () => {\n    setCurrentImage(image);\n  };\n\n  const link = `/phones/${productId?.split('-').slice(0, -2).join('-')}`;\n\n  return (\n    isLoading ? (\n      <Loader />\n    ) : (\n      <div className=\"product-details page__details\">\n        <Breadcrumbs name={productInfo?.name || ''} />\n\n        <BackButton />\n\n        {(!product || isError) ? (\n          <h2 className=\"no-results\">\n            Phone was not found\n          </h2>\n        ) : (\n          <>\n            <h1 className=\"product-details__title\">\n              {productInfo?.name}\n            </h1>\n\n            <div className=\"product-details__interaction-block\">\n              <div className=\"product-details__images\">\n                {productInfo?.images.map(image => (\n                  <button\n                    type=\"button\"\n                    className={classNames(\n                      'product-details__image-button',\n                      {\n                        'product-details__image-button--selected': (\n                          image === currentImage\n                        ),\n                      },\n                    )}\n                    key={image}\n                    onClick={handleCurrentImage(image)}\n                  >\n                    <img\n                      src={`./${image}`}\n                      alt={image}\n                      className=\"product-details__image-icon\"\n                    />\n                  </button>\n                ))}\n              </div>\n\n              <div className=\"product-details__current-image\">\n                <img\n                  src={`./${currentImage}`}\n                  alt={productInfo?.name}\n                  className=\"product-details__phone-image\"\n                />\n              </div>\n\n              <div className=\"product-details__interaction\">\n                <div className=\"product-details__select-container\">\n                  <p className=\"product-details__name\">\n                    Available colors\n                  </p>\n\n                  <ul className=\"product-details__select-buttons\">\n                    {productInfo?.colorsAvailable.map(color => (\n                      <li\n                        key={color}\n                        className={classNames(\n                          'product-details__color',\n                          {\n                            'product-details__color--active': (\n                              color === currentColor\n                            ),\n                          },\n                        )}\n                      >\n                        <Link\n                          to={`${link}-${currentCapacity.toLowerCase()}-${color}`}\n                          className={classNames(\n                            'product-details__color-border',\n                            {\n                              'product-details__color-border--active': (\n                                color === currentColor\n                              ),\n                            },\n                          )}\n                          style={{ backgroundColor: colors[color] }}\n                        />\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n\n                <div className=\"product-details__line\" />\n\n                <div className=\"product-details__select-container\">\n                  <p className=\"product-details__name\">\n                    Select capacity\n                  </p>\n\n                  <div className=\"product-details__select-buttons\">\n                    {productInfo?.capacityAvailable.map(capacity => (\n                      <Link\n                        to={`${link}-${capacity.toLowerCase()}-${currentColor}`}\n                        className={classNames(\n                          'product-details__capacity',\n                          {\n                            'product-details__capacity--active': (\n                              capacity === currentCapacity\n                            ),\n                          },\n                        )}\n                        key={capacity}\n                      >\n                        {capacity}\n                      </Link>\n                    ))}\n                  </div>\n                </div>\n\n                <div\n                  className={classNames(\n                    'product-details__line',\n                    'product-details__line--bigger',\n                  )}\n                />\n\n                <div className=\"product-details__price-block\">\n                  <p className=\"product-details__price\">\n                    {`$${Math.round((productInfo?.priceDiscount || 0) / 10) * 10 - 1} `}\n\n                    <span className=\"product-details__regular-price\">\n                      {`$${Math.round((productInfo?.priceRegular || 0) / 10) * 10 - 1}`}\n                    </span>\n                  </p>\n\n                  <div className=\"product-details__buttons\">\n                    {cart.some(productInCart => productInCart.id === product.id) ? (\n                      <button\n                        className={classNames(\n                          'product-details__cart-button',\n                          'product-details__cart-button--added',\n                        )}\n                        type=\"button\"\n                        onClick={() => dispatch(cartActions.take({ product, id: (product?.id || '0'), quantity: 1 }))}\n                      >\n                        Added to cart\n                      </button>\n                    ) : (\n                      <button\n                        className=\"product-details__cart-button\"\n                        type=\"button\"\n                        onClick={() => dispatch(cartActions.add({ product, id: (product?.id || '0'), quantity: 1 }))}\n                      >\n                        Add to cart\n                      </button>\n                    )}\n\n                    <button\n                      type=\"button\"\n                      className=\"product-details__favourites-button\"\n                      onClick={() => (\n                        favourites.some(favouriteProduct => favouriteProduct.id === product.id)\n                          ? dispatch(favouritesActions.take(product))\n                          : dispatch(favouritesActions.add(product))\n                      )}\n                    >\n                      <div\n                        className={classNames(\n                          'product-details__favourites-icon',\n                          {\n                            'product-details__favourites-icon--added': (\n                              favourites.some(\n                                favouriteProduct => favouriteProduct.id === product.id,\n                              )\n                            ),\n                          },\n                        )}\n                      />\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"product-details__info\">\n                  {info.map(specName => (\n                    <div className=\"product-details__info-row\" key={specName}>\n                      <p className=\"product-details__info-name\">\n                        {specName}\n                      </p>\n\n                      <p className=\"product-details__info-value\">\n                        {productInfo && productInfo[specName.toLowerCase()]}\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"product-details__text-block\">\n              <div\n                className=\"product-details__description\"\n                data-cy=\"productDescription\"\n              >\n                <h3 className=\"product-details__text-subtitle\">\n                  About\n                </h3>\n\n                <div\n                  className={classNames(\n                    'product-details__line',\n                    'product-details__line--bigger',\n                  )}\n                />\n\n                {productInfo?.description.map(description => (\n                  <div\n                    className=\"product-details__description-block\"\n                    key={description.title}\n                  >\n                    <p className=\"product-details__description-title\">\n                      {description.title}\n                    </p>\n\n                    <p className=\"product-details__description-text\">\n                      {description.text}\n                    </p>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"product-details__specs\">\n                <h3 className=\"product-details__text-subtitle\">\n                  Tech specs\n                </h3>\n\n                <div className=\"product-details__line\" />\n\n                {specsNames.map(specName => (\n                  <div className=\"product-details__specs-row\" key={specName}>\n                    <p className=\"product-details__specs-name\">\n                      {specName === 'Capacity' ? 'Built in memory' : specName}\n                    </p>\n\n                    <p className=\"product-details__specs-value\">\n                      {productInfo && productInfo[specName.toLowerCase()]}\n                    </p>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <Like />\n          </>\n        )}\n      </div>\n    )\n  );\n};\n","import { request } from './getProducts';\n\nexport const getProductInfo = (productId: string) => {\n  return request(`_new/products/${productId}.json`);\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\n\nimport { BackButton } from '../../components/BackButton';\n\nimport { CartType } from '../../types/CartType';\nimport { Product } from '../../types/Product';\n\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { actions as cartActions } from '../../store/cartReducer';\n\ntype Operator = 'plus' | 'minus';\n\nexport const CartPage = () => {\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [isMessage, setIsMessage] = useState(false);\n\n  const dispatch = useAppDispatch();\n  const cart = useAppSelector(state => state.cart);\n\n  useEffect(() => {\n    dispatch(cartActions.set());\n  }, []);\n\n  useEffect(() => {\n    setTotalQuantity(cart.reduce((\n      total: number,\n      { quantity }: { quantity: number },\n    ) => total + quantity, 0));\n\n    setTotalPrice(cart.reduce((\n      total: number,\n      { quantity, product }: { quantity: number, product: Product },\n    ) => total + quantity * (Math.round(product.price / 10) * 10 - 1), 0));\n  }, [cart]);\n\n  const getMessage = useCallback(() => {\n    setIsMessage(true);\n\n    const timeout = setTimeout(() => {\n      setIsMessage(false);\n    }, 5000);\n\n    return () => clearTimeout(timeout);\n  }, []);\n\n  const changeQuantity = (\n    product: Product,\n    quantity: number,\n    operator: Operator,\n  ) => () => {\n    const newQuantity = quantity + ((operator === 'plus') ? 1 : -1);\n\n    const newProductQuantityInfo = cart.find((\n      { id }: { id: string },\n    ) => (\n      product?.id === id\n    )) as CartType;\n\n    dispatch(cartActions.updateQuantity({ ...newProductQuantityInfo, quantity: newQuantity }));\n  };\n\n  const takeProductFromCart = (product: Product, quantity: number, id: string) => () => {\n    dispatch(cartActions.take({ product, quantity, id }));\n  };\n\n  return (\n    <div className=\"cart page__cart\">\n      <BackButton />\n\n      <h1 className=\"cart__title\">\n        Cart\n      </h1>\n\n      <div className=\"cart__container\">\n        {!cart.length ? (\n          <div className=\"no-results\">\n            Your cart is empty\n          </div>\n        ) : (\n          <>\n            <div className=\"cart__products\">\n              {cart.map(({ product, quantity, id }: CartType) => (\n                <div\n                  className=\"cart__product\"\n                  key={id}\n                >\n                  <div className=\"cart__product-info\">\n                    <button\n                      type=\"button\"\n                      className={classNames(\n                        'cart__delete-button',\n                        'cart__delete-button--tablet',\n                      )}\n                      aria-label=\"Delete\"\n                      onClick={takeProductFromCart(product, quantity, id)}\n                      data-cy=\"cartDeleteButton\"\n                    />\n\n                    <div className=\"cart__image-container\">\n                      <img\n                        src={`./${product.image}`}\n                        alt={product.name}\n                        className=\"cart__image\"\n                      />\n                    </div>\n\n                    <p className=\"cart__name\">\n                      {product.name}\n                    </p>\n\n                    <div className=\"cart__quantity-block\">\n                      <button\n                        type=\"button\"\n                        className={classNames(\n                          'cart__quantity-button',\n                          'cart__quantity-button--minus',\n                        )}\n                        aria-label=\"minus\"\n                        onClick={changeQuantity(product, quantity, 'minus')}\n                        disabled={quantity === 1}\n                      />\n\n                      <p\n                        className=\"cart__quantity\"\n                        data-cy=\"productQauntity\"\n                      >\n                        {quantity}\n                      </p>\n\n                      <button\n                        type=\"button\"\n                        className={classNames(\n                          'cart__quantity-button',\n                          'cart__quantity-button--plus',\n                        )}\n                        aria-label=\"plus\"\n                        onClick={changeQuantity(product, quantity, 'plus')}\n                      />\n                    </div>\n\n                    <button\n                      type=\"button\"\n                      className=\"cart__delete-button cart__delete-button--phone\"\n                      aria-label=\"Delete\"\n                      onClick={takeProductFromCart(product, quantity, id)}\n                      data-cy=\"cartDeleteButton\"\n                    />\n                  </div>\n\n                  <div className=\"cart__product-price\">\n                    {`$${quantity * (Math.round(product.price / 10) * 10 - 1)}`}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"cart__cost\">\n              <div className=\"cart__total-block\">\n                <p className=\"cart__total-price\">\n                  {`$${totalPrice}`}\n                </p>\n\n                <p className=\"cart__total-quantity\">\n                  {`Total for ${totalQuantity} items`}\n                </p>\n              </div>\n\n              <div className=\"cart__line\" />\n\n              {isMessage ? (\n                <button\n                  type=\"button\"\n                  className={classNames(\n                    'cart__checkout-button',\n                    'cart__checkout-button--clicked',\n                  )}\n                  disabled\n                >\n                  We are sorry, but this feature is not implemented yet\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"cart__checkout-button\"\n                  onClick={getMessage}\n                >\n                  Checkout\n                </button>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, {\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { BackButton } from '../../components/BackButton';\nimport { ProductCard } from '../../components/ProductCard';\nimport { NoSearchResults } from '../../components/NoSearchResults';\n\nimport { Product } from '../../types/Product';\n\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { actions as favouritesActions } from '../../store/favouritesReducer';\nimport { actions as cartActions } from '../../store/cartReducer';\nimport { filterProducts } from '../../functions/filterProducts';\n\nconst title = 'Favourites';\n\nexport const FavouritesPage = () => {\n  const [\n    visibleFavourites,\n    setVisibleFavourites,\n  ] = useState<Product[] | null>(null);\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [isNoSearchResults, setIsNoSearchResults] = useState(false);\n\n  const dispatch = useAppDispatch();\n  const favourites = useAppSelector(state => state.favourites);\n\n  const timerId = useRef(0);\n\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get('query')?.split('+').join(' ') || '';\n\n  useEffect(() => {\n    dispatch(cartActions.set());\n    dispatch(favouritesActions.set());\n  }, []);\n\n  useEffect(() => {\n    timerId.current = window.setTimeout(() => {\n      setAppliedQuery(query);\n    }, 1000);\n\n    return () => clearTimeout(timerId.current);\n  }, [query]);\n\n  useEffect(() => {\n    filterProducts(favourites, appliedQuery, setVisibleFavourites, setIsNoSearchResults);\n  }, [appliedQuery, favourites]);\n\n  return (\n    <div className=\"favourites page__cart\">\n      <BackButton />\n\n      <h1 className=\"favourites__title\">\n        {title}\n      </h1>\n\n      <p className=\"favourites__count\">\n        {`${visibleFavourites?.length} item${visibleFavourites?.length === 1 ? '' : 's'}`}\n      </p>\n\n      <div className=\"favourites__container\">\n        {!favourites.length && (\n          <div className=\"no-results\">\n            Favourites not found\n          </div>\n        )}\n\n        {isNoSearchResults ? (\n          <NoSearchResults title={title} />\n        ) : (\n          <div className=\"favourites__products\">\n            {visibleFavourites?.map(product => (\n              <ProductCard\n                key={product.id}\n                product={product}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage = () => {\n  return (\n    <div className=\"not-found  page__not-found\">\n      <h1 className=\"not-found__title\">\n        Sorry, page not found...\n      </h1>\n    </div>\n  );\n};\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport favouritesReducer from './favouritesReducer';\nimport cartReducer from './cartReducer';\nimport menuReducer from './menuReducer';\n\nconst store = configureStore({\n  reducer: {\n    favourites: favouritesReducer,\n    cart: cartReducer,\n    menu: menuReducer,\n  },\n});\n\nexport default store;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\n\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PhonesPage } from './pages/PhonesPage';\nimport { TabletsPage } from './pages/TabletsPage';\nimport { AccessoriesPage } from './pages/AccessoriesPage';\nimport { ProductDetailsPage } from './pages/ProductDetailsPage';\nimport { CartPage } from './pages/CartPage';\nimport { FavouritesPage } from './pages/FavouritesPage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nimport store from './store/store';\n\nexport const Root = () => (\n  <Provider store={store}>\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"phones\">\n            <Route index element={<PhonesPage />} />\n\n            <Route path=\":productId\" element={<ProductDetailsPage />} />\n          </Route>\n\n          <Route path=\"tablets\">\n            <Route index element={<TabletsPage />} />\n\n            <Route path=\":productId\" element={<ProductDetailsPage />} />\n          </Route>\n\n          <Route path=\"accessories\">\n            <Route index element={<AccessoriesPage />} />\n\n            <Route path=\":productId\" element={<ProductDetailsPage />} />\n          </Route>\n\n          <Route path=\"cart\" element={<CartPage />} />\n\n          <Route path=\"favourites\" element={<FavouritesPage />} />\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  </Provider>\n);\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport { Root } from './Root';\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}